module Main where

import Sudoku

-- Easy
puzzle1 = fromList [ [ 4,0,0,  0,0,0,  7,0,0 ]
                   , [ 0,0,7,  0,0,4,  3,0,9 ]
                   , [ 0,0,0,  2,0,5,  1,0,0 ]

                   , [ 0,2,0,  0,3,0,  0,1,5 ]
                   , [ 0,9,0,  4,1,2,  0,7,0 ]
                   , [ 6,7,0,  0,5,0,  0,4,0 ]

                   , [ 0,0,2,  5,0,9,  0,0,0 ]
                   , [ 7,0,9,  3,0,0,  5,0,0 ]
                   , [ 0,0,8,  0,0,0,  0,0,2 ]
                   ]

-- Hard
puzzle2 = fromList [ [ 0,6,0,  0,0,2,  0,0,0 ]
                   , [ 0,0,9,  0,0,0,  1,5,4 ]
                   , [ 0,0,4,  3,0,9,  0,0,0 ]

                   , [ 8,0,7,  0,0,5,  0,9,0 ]
                   , [ 0,0,0,  0,0,0,  0,0,0 ]
                   , [ 0,9,0,  7,0,0,  2,0,8 ]

                   , [ 0,0,0,  5,0,7,  8,0,0 ]
                   , [ 4,7,8,  0,0,0,  6,0,0 ]
                   , [ 0,0,0,  2,0,0,  0,4,0 ]
                   ]

-- Empty
puzzle3 = fromList [ [ 0,0,0,  0,0,0,  0,0,0 ]
                   , [ 0,0,0,  0,0,0,  0,0,0 ]
                   , [ 0,0,0,  0,0,0,  0,0,0 ]

                   , [ 0,0,0,  0,0,0,  0,0,0 ]
                   , [ 0,0,0,  0,0,0,  0,0,0 ]
                   , [ 0,0,0,  0,0,0,  0,0,0 ]

                   , [ 0,0,0,  0,0,0,  0,0,0 ]
                   , [ 0,0,0,  0,0,0,  0,0,0 ]
                   , [ 0,0,0,  0,0,0,  0,0,0 ]
                   ]

-- Contradiction
puzzle4 = fromList [ [ 0,6,0,  0,0,2,  0,0,0 ]
                   , [ 0,0,9,  0,0,0,  1,5,4 ]
                   , [ 0,0,4,  3,0,9,  0,0,0 ]

                   , [ 8,0,7,  0,0,5,  0,9,0 ]
                   , [ 0,0,0,  8,0,0,  0,0,0 ]
                   , [ 0,9,0,  7,0,0,  2,0,8 ]

                   , [ 0,0,0,  5,0,7,  8,0,0 ]
                   , [ 4,7,8,  0,0,0,  6,0,0 ]
                   , [ 0,0,0,  2,0,0,  0,4,0 ]
                   ]

main :: IO ()
main = case solve puzzle1 of
         Just p  -> printS p
         Nothing -> putStrLn "No solution found"
